taskKey="com.javarush.games.game2048.part08"\n\nИгра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.


Требования:
1.	В классе Game2048 должен быть создан приватный метод boolean mergeRow(int[] row).
2.	Метод mergeRow(int[]) должен быть реализован в соответствии с условием задачи.
3.	Метод mergeRow(int[]) должен возвращать true, если им были внесены изменения во входящий массив и false, если изменений не было.


Игра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.



Игра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.



Игра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.



Игра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.



Игра 2048 (8/18)

Ты уже умеешь передвигать плитки по полю. Но это не все, что ты можешь делать в данной игре :)
Если при сдвиге две плитки с одинаковым значением "налетают" друг на друга, они соединяются в одну,
а ее значение равно сумме соединившихся плиток. Давай реализуем это.

Условия задачи:
Создай приватный метод boolean mergeRow(int[] row), который соединяет соседние пары одинаковых ненулевых элементов
массива row. Соединение должно происходить при сдвиге влево.

Если подряд стоят более двух одинаковых ненулевых элементов, соединяются сначала самые левые.
Соединенные элементы повторно не соединяются (в рамках текущего хода).

Метод должен возвращать true, если хотя бы один элемент массива был в нем изменен, иначе — false.

Примеры:
- Было (4, 4, 0, 0), стало (8, 0, 0, 0). Метод вернул true.
- Было (2, 2, 2, 2), стало (4, 0, 4, 0). Метод вернул true.
- Было (4, 2, 2, 0), стало (4, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 0), стало (0, 4, 0, 0). Метод вернул true.
- Было (0, 2, 2, 2), стало (0, 4, 0, 2). Метод вернул true.
- Было (4, 0, 4, 0), стало (4, 0, 4, 0). Метод вернул false.



