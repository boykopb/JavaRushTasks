taskKey="com.javarush.games.moonlander.part17"\n\nИгра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.


Требования:
1.	Должен существовать публичный класс RocketFire.
2.	Класс RocketFire должен быть наследником класса GameObject.
3.	В классе RocketFire должно существовать приватное поле frames типа List&lt;int[][]&gt;.
4.	В классе RocketFire должно существовать приватное поле frameIndex типа int.
5.	В классе RocketFire должно существовать приватное поле isVisible типа boolean.
6.	В классе RocketFire должен существовать один публичный конструктор с одним параметром типа List&lt;int[][]&gt;.
7.	Конструктор класса RocketFire должен вызывать конструктор базового класса с параметрами 0, 0 и frameList.get(0), где frameList &ndash; параметр конструктора. Необходимо использовать ключевое слово &quot;super&quot;.
8.	Конструктор класса RocketFire должен инициализировать поле frames значением frameList.
9.	Конструктор класса RocketFire должен инициализировать поле frameIndex значением 0.
10.	Конструктор класса RocketFire должен инициализировать поле isVisible значением false.


Игра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (17/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



