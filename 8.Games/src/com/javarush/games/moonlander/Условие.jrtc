taskKey="com.javarush.games.moonlander.part22"\n\nИгра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.


Требования:
1.	В классе MoonLanderGame должно существовать приватное поле score типа int.
2.	Поле score должно быть проинициализировано в методе createGame() значением 1000.
3.	Метод onTurn(int) должен уменьшать значение поля score на единицу, если значение поля score положительное.
4.	Метод onTurn(int) должен вызвать метод setScore(int) с параметром score после вызова метода check().
5.	Метод gameOver() должен установить полю score значение 0.


Игра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.



Игра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.



Игра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.



Игра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.



Игра Moon Lander (22/23)

Игра занимательная, но все-таки здорово было бы добавить счет очков. Очки мы будем считать по такому принципу: чем быстрее посадил
ракету, тем меньше игровых очков это стоило. Поэтому мы будем уменьшать количество очков с течением времени (на каждом шаге игры), пока
не достигнем 0. Для подсчета очков введем переменную score, в которой будем хранить их количество. Чтобы счет отображался
на игровом поле, нам нужно воспользоваться специальным методом setScore класса Game, в который передаем общее
количество очков. И не забудь обнулить очки, если игра проиграна. Чтобы корректно отобразить очки после проигрыша,
вызов метода setScore должен идти после вызова метода check.



